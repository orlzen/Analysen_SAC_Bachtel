---
title: "SAC Bachtel Analysen Anmeldungen & Ausschreibungen"
author: "Lorenz Biberstein, Tourenchef Sommer & Schneeschuhe"
date: "`r Sys.time()`"
date-format: medium
format: 
  html:
    embed-resources: true
always_allow_html: true
toc: true
toc-depth: 5
toc-title: "Inhalt"
toc-location: left
number-sections: true
number-depth: 3
lang: "de-DE"
---

```{r global setup}
#| include = FALSE


# global options für alle Abbildungen: 50% Breite und Ausrichtung zentriert
knitr::opts_chunk$set(
  # out.width = "75%",
  fig.align = "center",
  fig.topcaption = TRUE,
  echo = FALSE,
  message = FALSE,
  warning = FALSE
)
```

```{r packages}
library(readxl) # Import von Excel
library(dplyr) # Für spätere Analysen
library(ggplot2) # Für spätere Abbildungen
library(janitor) # Für Datenbereinigung und Tabellen
library(stringr) # Für die Arbeit mit Strings
library(here) # Für saubere Pfade
```

# Einleitung

Dieses Dokument analysiert die Ausschreibungen und Anmeldungen der Sektionsanlässe des [SAC Bachtel](http://www.sac-bachtel.ch). Analysen sind möglich für die Jahre ab 2016, seit der Einführung von DropTours.

Dazu werden von DropTours die gesamten Ausschreibungen und Anmeldungen heruntergeladen, bearbeitet (entfernen überflüssiger Informationen) und zusammengefügt zu einem Datensatz, welcher alle Anmeldungen kombiniert mit den jeweiligen Informationen zu den Anlässen. Nachfolgend wird der Prozess etwas genauer beschrieben.

# Datenvorbereitung

Bei der Vorbereitung der Daten wird wie folgt vorgegangen:

1.  Manuelles herunterladen der Excel der Anmeldungen und Ausschreibungen von [DropTours](http://www.sac-bachtel.ch/manager)

2.  Manuelles bearbeiten der Excel:

    -   Abspeichern im .xlsx-Format
    -   Umbenennen der "Aktivität" in "Aktivitaet"; diese Spalte muss einheitlich sein für das spätere Zusammenfügen von Anmeldungen und Ausschreibungen

3.  Einlesen der Daten der Anmeldungen und Ausschreibungen

4.  Bearbeitung der Anmeldungen:

    -   Es werden nur das Geschlecht, Name & Vorname, PLZ, Ort, Vegetarier, Kürzel, Geburtsjahr, Aktivität, Startdatum und Status behalten, der Rest wird gelöscht.

5.  Bearbeitung der Ausschreibungen:

    -   Es wird nur Aktivität, Startdatum, Tourtyp (lang und kurz), die technischen und konditionellen Anforderungen, sowie Name und Vorname des Tourenleiters behalten.

6.  Die Datensätze aus Anmeldungen und Ausschreibungen werden anhand der Spalte `Aktivitaet` zusammengefügt

7.  Neue Variablen werden gebildet:

    -   Alter (anhand Jahr des Anlasses und Geburtsdatum)
    -   Geschlecht (anhand der Anrede)

```{r Einlesen_Daten_Anmeldung_und_Ausschreibungen}
anm_2016 <- read_excel(here("Rohdaten", "Anmeldungen 2016.xlsx"))
anm_2017 <- read_excel(here("Rohdaten", "Anmeldungen 2017.xlsx"))
anm_2018 <- read_excel(here("Rohdaten", "Anmeldungen 2018.xlsx"))
anm_2019 <- read_excel(here("Rohdaten", "Anmeldungen 2019.xlsx"))
anm_2020 <- read_excel(here("Rohdaten", "Anmeldungen 2020.xlsx"))
anm_2021 <- read_excel(here("Rohdaten", "Anmeldungen 2021.xlsx"))
anm_2022 <- read_excel(here("Rohdaten", "Anmeldungen 2022.xlsx"))

auss_2016 <- read_excel(here("Rohdaten", "Ausschreibungen 2016.xlsx"))
auss_2017 <- read_excel(here("Rohdaten", "Ausschreibungen 2017.xlsx"))
auss_2018 <- read_excel(here("Rohdaten", "Ausschreibungen 2018.xlsx"))
auss_2019 <- read_excel(here("Rohdaten", "Ausschreibungen 2019.xlsx"))
auss_2020 <- read_excel(here("Rohdaten", "Ausschreibungen 2020.xlsx"))
auss_2021 <- read_excel(here("Rohdaten", "Ausschreibungen 2021.xlsx"))
auss_2022 <- read_excel(here("Rohdaten", "Ausschreibungen 2022.xlsx"))
auss_2023 <- read_excel(here("Rohdaten", "Ausschreibungen 2023.xlsx"))
```

```{r Anmeldungen_bearbeiten}
temp2016 <- c(
  "Anrede", "Name", "Vorname", "PLZ", "Ort", "Vegetarier", "Kuerzel",
  "Geburtsjahr", "Aktivitaet", "Startdatum", "Status"
)
anm_2016_klein <- anm_2016[temp2016]
remove(temp2016, anm_2016)

# 2017
temp2017 <- c(
  "Anrede", "Name", "Vorname", "PLZ", "Ort", "Vegetarier", "Kuerzel",
  "Geburtsjahr", "Aktivitaet", "Startdatum", "Status"
)
anm_2017_klein <- anm_2017[temp2017]
remove(temp2017, anm_2017)

# 2018
temp2018 <- c(
  "Anrede", "Name", "Vorname", "PLZ", "Ort", "Vegetarier", "Kuerzel",
  "Geburtsjahr", "Aktivitaet", "Startdatum", "Status"
)
anm_2018_klein <- anm_2018[temp2018]
remove(temp2018, anm_2018)

# 2019
temp2019 <- c(
  "Anrede", "Name", "Vorname", "PLZ", "Ort", "Vegetarier", "Kuerzel",
  "Geburtsjahr", "Aktivitaet", "Startdatum", "Status"
)
anm_2019_klein <- anm_2019[temp2019]
remove(temp2019, anm_2019)

# 2020
temp2020 <- c(
  "Anrede", "Name", "Vorname", "PLZ", "Ort", "Vegetarier", "Kuerzel",
  "Geburtsjahr", "Aktivitaet", "Startdatum", "Status"
)
anm_2020_klein <- anm_2020[temp2020]
remove(temp2020, anm_2020)

# 2021
temp2021 <- c(
  "Anrede", "Name", "Vorname", "PLZ", "Ort", "Vegetarier", "Kuerzel",
  "Geburtsjahr", "Aktivitaet", "Startdatum", "Status"
)
anm_2021_klein <- anm_2021[temp2021]
remove(temp2021, anm_2021)

# 2022
temp2022 <- c(
  "Anrede", "Name", "Vorname", "PLZ", "Ort", "Vegetarier", "Kuerzel",
  "Geburtsjahr", "Aktivitaet", "Startdatum", "Status"
)
anm_2022_klein <- anm_2022[temp2022]
remove(temp2022, anm_2022)
```

```{r create_anm_total}
# Alle Jahre kombinieren zu einem Datensatz mit oben ausgewählten Variablen
anm_total <- rbind(anm_2016_klein, 
                   anm_2017_klein, 
                   anm_2018_klein, 
                   anm_2019_klein, 
                   anm_2020_klein,
                   anm_2021_klein,
                   anm_2022_klein)
```

```{r anmeldungen_bereinigen}
# Fälle ausschliessen, wenn "Aktivität" = "Testtour Anmeldung" (Test-Anmeldungen)
anm_total <- anm_total[!anm_total$Aktivitaet == "Testtour Anmeldung", ]

# ** Neue Variablen bilden ----

# Variable für Jahr des Anlasses (Startdatum) definieren; als neue Spalte definieren!
anm_total$jahr <- as.numeric(format(anm_total$Startdatum, "%Y")) # Anmeldungen

# Alter der Teilnehmenden berechnen (nur anhand Geburtsjahr). ACHTUNG: Bei fehlendem Geburtsjahr ist Alter = jahr!
anm_total$alter <- anm_total$jahr - anm_total$Geburtsjahr

# Alter grösser als 199 mit NA ersetzen
anm_total$alter_korr <- replace(anm_total$alter, anm_total$alter > 199, NA)

# Anrede zu Geschlecht umformatieren
colnames(anm_total)[colnames(anm_total) == "Anrede"] <- "TN_geschlecht" # Spaltennamen ändern
anm_total$TN_geschlecht <- replace(anm_total$TN_geschlecht, anm_total$TN_geschlecht == "Herr", "männlich")
anm_total$TN_geschlecht <- replace(anm_total$TN_geschlecht, anm_total$TN_geschlecht == "Frau", "weiblich")

# Informationen der TN: Spaltennamen ändern

colnames(anm_total)[colnames(anm_total) == "Vorname"] <- "TN_Vorname"
colnames(anm_total)[colnames(anm_total) == "Name"] <- "TN_Name"
colnames(anm_total)[colnames(anm_total) == "PLZ"] <- "TN_PLZ"
colnames(anm_total)[colnames(anm_total) == "Ort"] <- "TN_Ort"
colnames(anm_total)[colnames(anm_total) == "Vegetarier"] <- "TN_Vegetarier"
colnames(anm_total)[colnames(anm_total) == "Kuerzel"] <- "TN_Kuerzel"
colnames(anm_total)[colnames(anm_total) == "Geburtsjahr"] <- "TN_Geburtsjahr"
colnames(anm_total)[colnames(anm_total) == "alter"] <- "TN_alter"
colnames(anm_total)[colnames(anm_total) == "alter_korr"] <- "TN_alter_korr"
```

```{r Ausschreibungen_bearbeiten}
# ** Zu behaltende Variablen definieren ----

# 2016

temp2016 <- c(
  "Aktivitaet", "Startdatum", "Gruppe", "Tourtyp", "Tourtyp lang", "Techn. Anforderungen",
  "Kond. Anforderungen", "Status"
)
auss_2016_klein <- auss_2016[temp2016]
remove(temp2016, auss_2016)

# 2017

temp2017 <- c(
  "Aktivitaet", "Startdatum", "Gruppe", "Tourtyp", "Tourtyp lang", "Techn. Anforderungen",
  "Kond. Anforderungen", "Status"
)
auss_2017_klein <- auss_2017[temp2017]
remove(temp2017, auss_2017)

# 2018

temp2018 <- c(
  "Aktivitaet", "Startdatum", "Gruppe", "Tourtyp", "Tourtyp lang", "Techn. Anforderungen",
  "Kond. Anforderungen", "Status"
)
auss_2018_klein <- auss_2018[temp2018]
remove(temp2018, auss_2018)

# 2019

temp2019 <- c(
  "Aktivitaet", "Startdatum", "Gruppe", "Tourtyp", "Tourtyp lang", "Techn. Anforderungen",
  "Kond. Anforderungen", "Status"
)
auss_2019_klein <- auss_2019[temp2019]
remove(temp2019, auss_2019)

# 2020

temp2020 <- c(
  "Aktivitaet", "Startdatum", "Gruppe", "Tourtyp", "Tourtyp lang", "Techn. Anforderungen",
  "Kond. Anforderungen", "Status"
)
auss_2020_klein <- auss_2020[temp2020]
remove(temp2020, auss_2020)

# 2021

temp2021 <- c(
  "Aktivitaet", "Startdatum", "Gruppe", "Tourtyp", "Tourtyp lang", "Techn. Anforderungen",
  "Kond. Anforderungen", "Status"
)
auss_2021_klein <- auss_2021[temp2021]
remove(temp2021, auss_2021)

# 2022

temp2022 <- c(
  "Aktivitaet", "Startdatum", "Gruppe", "Tourtyp", "Tourtyp lang", "Techn. Anforderungen",
  "Kond. Anforderungen", "Status"
)
auss_2022_klein <- auss_2022[temp2022]
remove(temp2022, auss_2022)

# 2023

temp2023 <- c(
  "Aktivitaet", "Startdatum", "Gruppe", "Tourtyp", "Tourtyp lang", "Techn. Anforderungen",
  "Kond. Anforderungen", "Status"
)
auss_2023_klein <- auss_2023[temp2023]
remove(temp2023, auss_2023)
```

```{r ausschreibungen_verbinden, include=FALSE}
# Alle Jahre kombinieren zu einem Datensatz mit oben ausgewählten Variablen
auss_total <- rbind(
  auss_2016_klein, 
  auss_2017_klein, 
  auss_2018_klein, 
  auss_2019_klein,
  auss_2020_klein,
  auss_2021_klein,
  auss_2022_klein,
  auss_2023_klein
)
```

```{r ausschreibungen_bereinigen}
# Fälle ausschliessen, wenn "Aktivität" = "Testtour Anmeldung" (Test-Anmeldungen)
auss_total <- auss_total[!auss_total$Aktivitaet == "Testtour Anmeldung", ]

# Name & Vorname TL: Spalten umbenennen
colnames(auss_total)[colnames(auss_total) == "Vorname"] <- "TL_Vorname"
colnames(auss_total)[colnames(auss_total) == "Name"] <- "TL_Nachname"

# Variable für Jahr des Anlasses (Startdatum) definieren; als neue Spalte definieren!
auss_total$jahr <- as.numeric(format(auss_total$Startdatum, "%Y")) # Ausschreibungen

# Status korrigieren (vor 2021: "/ausgebucht", ab 2021: "ausgebucht" [ohne slash])
auss_total$Status <- str_replace_all(auss_total$Status, '/', '')
```

```{r Datensätze Anmeldungen & Ausschreibungen zusammenfügen}
total <- merge(auss_total, anm_total)
```

# Analysen

## Analyse der Anmeldungen

### Geschlecht

Nachfolgend einige Analysen zu den absoluten Anmeldungen. In Abbildung @fig-anmeldungen-jahr sind die Anzahl Anmeldungen pro Jahr ersichtlich, in Abbildung @fig-anmeldungen-jahr-geschlecht sind sie nach Geschlecht getrennt. Beide Abbildungen zeigen klar den Corona-bedingten Rückgang an Anmeldungen im Jahr 2020. Die zweite Abbildung zeigt zudem, wie die Anzahl Anmeldungen von weiblichen Mitgliedern seit 2016 am steigen war, während die Männer von 2017 auf 2018 sogar einen leichten Rückgang erlitten bei den Anmeldungen.

```{r Anmeldungen_Jahr}
#| label: fig-anmeldungen-jahr
#| fig-cap: "Total Anmeldungen nach Jahr"


anm_total %>%
  ggplot(aes(x = jahr)) +
  geom_bar(stat = "count", fill = "grey") +
  labs(
    x = "Jahr",
    y = "Anzahl Anmeldungen"
  ) +
  theme_minimal() +
  scale_y_continuous(breaks = c(0, 500, 1000, 1500, 2000, 2500, 3000, 3500)) +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

```{r Anmeldungen_Jahr_Geschlecht}
#| label: fig-anmeldungen-jahr-geschlecht
#| fig-cap: "Total Anmeldungen nach Jahr und Geschlecht"


anm_total %>%
  ggplot(aes(x = jahr, fill = TN_geschlecht)) +
  geom_bar(stat = "count") +
  labs(
    x = "Jahr",
    y = "Anzahl Anmeldungen",
    fill = "Geschlecht"
  ) +
  scale_fill_brewer(palette = "Set1") +
  theme_minimal() +
  scale_y_continuous(breaks = c(0, 500, 1000, 1500, 2000, 2500, 3000, 3500)) +
  stat_count(
    geom = "text", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

### Alter

Nachfolgend werden die Durchschnittsalter der Teilnehmenden nach Jahr (beide Geschlechter zusammen) und nach Geschlecht (alle Jahre zusammen) gezeigt. Es ist ersichtlich, dass einerseits das Durchschnittsalter der Teilnehmenden lange gesunken ist und jetzt wieder anzusteigen scheint (@tbl-durchschnittsalter und @tbl-durchschnittsalter-median) und die Teilnehmerinnen im Durchschnitt jünger sind als die Teilnehmer (@tbl-durchschnittsalter-geschlecht für den Mittelwert und @tbl-durchschnittsalter-geschlecht-median für den Median). Der Tiefpunkt sowohl beim Mittelwert- als auch beim Medianalter im Jahr 2022 könnte jedoch auch auf die Corona-Pandemie zuruckzuführen sein, wobei sich die älteren Teilnehmer:innen noch zurückhaltender verhielten und sich weniger auf Touren anmeldeten.


```{r}
#| label: tbl-durchschnittsalter
#| tbl-cap: "Durchschnittsalter (Mittelwert) der Anmeldungen pro Jahr"

knitr::kable(anm_total %>%
               group_by(jahr) %>%
               summarize(mw_alter = mean(TN_alter_korr,
                                         na.rm = TRUE)),
             col.names = c("Jahr", "Durchschnittsalter (Mittelwert)"),
             align = "lc",
             digits = 1)
```

```{r}
#| label: tbl-durchschnittsalter-median
#| tbl-cap: "Durchschnittsalter (Median) der Anmeldungen pro Jahr"

knitr::kable(anm_total %>%
               group_by(jahr) %>%
               summarize(med_alter = median(TN_alter_korr,
                                         na.rm = TRUE)),
             col.names = c("Jahr", "Durchschnittsalter (Median)"),
             align = "lc",
             digits = 1)
```


```{r}
#| label: tbl-durchschnittsalter-geschlecht
#| tbl-cap: "Durchschnittsalter (Mittelwert) aller Anmeldungen nach Geschlecht"


knitr::kable(total %>%
               group_by(TN_geschlecht) %>%
               summarize(mw_alter = mean(TN_alter_korr, 
                                         na.rm = TRUE)),
             col.names = c("Geschlecht", "Durchschnittsalter (Mittelwert)"),
             align = "lc",
             digits = 1)
```

```{r}
#| label: tbl-durchschnittsalter-geschlecht-median
#| tbl-cap: "Durchschnittsalter (Median) aller Anmeldungen nach Geschlecht"


knitr::kable(total %>%
               group_by(TN_geschlecht) %>%
               summarize(med_alter = median(TN_alter_korr, 
                                            na.rm = TRUE)),
             col.names = c("Geschlecht", "Durchschnittsalter (Median)"),
             align = "lc",
             digits = 1)
```

Die Altersbreite in der Sektion ist offensichtlich sehr gross; wenn man nur die Anmeldungen auf Sektionstouren anschaut, liegt das Durchschnittsalter offensichtlich tiefer (@tbl-durchschnittsalter-geschlecht-sektion und @tbl-durchschnittsalter-geschlecht-median-sektion).

```{r}
#| label: tbl-durchschnittsalter-geschlecht-sektion
#| tbl-cap: "Durchschnittsalter (Mittelwert) aller Anmeldungen nach Geschlecht (nur Sektion)"


knitr::kable(total %>%
               filter(Gruppe == "Sektion") |> 
               group_by(TN_geschlecht) %>%
               summarize(mw_alter = mean(TN_alter_korr, 
                                         na.rm = TRUE)),
             col.names = c("Geschlecht", "Durchschnittsalter (Mittelwert)"),
             align = "lc",
             digits = 1)
```

```{r}
#| label: tbl-durchschnittsalter-geschlecht-median-sektion
#| tbl-cap: "Durchschnittsalter (Median) aller Anmeldungen nach Geschlecht (nur Sektion)"


knitr::kable(total %>%
               filter(Gruppe == "Sektion") |> 
               group_by(TN_geschlecht) %>%
               summarize(med_alter = median(TN_alter_korr, 
                                            na.rm = TRUE)),
             col.names = c("Geschlecht", "Durchschnittsalter (Median)"),
             align = "lc",
             digits = 1)
```

Das unterschiedliche Alter zwischen Männer und Frauen lässt sich auch in einer Abbildung visualisieren: @fig-altersverteilung-geschlecht zeigt die Altersverteilung der Anmeldungen nach Geschlecht als Baumdiagramm, wobei breitere Stellen auf mehr Personen in diesem Alter hinweisen, schmälere auf weniger Personen. Dabei wird ersichtlich, dass:

-   Die Männer tendenziell länger an Sektionsanlässen teilnehmen (Spitze weiter oben)
-   Frauen eher ein tieferes Durchschnittsalter aufweisen (breiteste Stelle ist weiter unten)
-   Bei beiden Geschlechtern eine Häufung an Aktivitäten auftreten ca. im 55 Altersjahr, gefolgt von einem Rückgang ("Taille" ca. bei 60 Jahren), gefolgt von einem neuerlichen Anstieg nach der Pensionierung
-   Sowohl bei den Männern als auch bei den Frauen sind die meisten Teilnehmer:innen zwischen 65 und 75 Jahre alt sind

```{r altersverteilung_geschlecht}
#| label: fig-altersverteilung-geschlecht
#| fig-cap: "Altersverteilung der Anmeldungen nach Geschlecht getrennt"


anm_total %>%
  ggplot(aes(
    x = TN_geschlecht,
    y = TN_alter_korr
  )) +
  geom_dotplot(
    binaxis = "y",
    stackdir = "center",
    binwidth = 0.2
  ) +
  theme_minimal() +
  labs(
    x = "Geschlecht",
    y = "Alter der Anmeldungen"
  ) +
  scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
```

In Abbildung @fig-altersverteilung-geschlecht-jahr ist das Alter der angemeldeten Teilnehmer::innen zudem pro Jahr ersichtlich, links die Männer und rechts die Frauen. Der in @tbl-durchschnittsalter festgestellte Rückgang des Durchschnittsalter lässt sich so jedoch kaum visualisieren.

```{r altersverteilung_jahr_geschlecht}
#| label: fig-altersverteilung-geschlecht-jahr
#| fig-cap: "Altersverteilung der Anmeldungen nach Jahr und Geschlecht getrennt"

anm_total %>%
  ggplot(aes(
    x = factor(jahr),
    y = TN_alter_korr, na.rm = TRUE
  )) +
  geom_dotplot(
    binaxis = "y",
    stackdir = "center",
    binwidth = 0.1
  ) +
  theme_minimal() +
  labs(
    x = "Jahr",
    y = "Alter der Anmeldungen",
    fill = "Geschlecht"
  ) +
  facet_grid(. ~ TN_geschlecht) +
  scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
```

```{r alter_jahr}
#| label: fig-altersverteilung-geschlecht-jahr-getrennt
#| fig-cap: "Altersverteilung der Anmeldungen nach Jahr und Geschlecht"
#| output: FALSE

anm_total %>%
  ggplot(aes(
    x = as.factor(jahr),
    y = TN_alter_korr,
    fill = TN_geschlecht)) +
  geom_dotplot(
    binaxis = "y",
    stackdir = "center",
    binwidth = 0.2
  ) +
  theme_minimal() +
  labs(
    x = "Jahr",
    y = "Alter der Anmeldungen",
    fill = "Geschlecht"
  ) +
  scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))
```

### Anzahl Teilnehmer pro Tour

#### Anmeldungen im Corona-Jahr 2020

In Abbildung @fig-anmeldungen_2020 ist die Verteilung der Anmeldungen im Jahr 2020 ersichtlich. Klar zu sehen ist der starke Rückgang an Anmeldungen ab ca. Mitte März (Lockdown), gefolgt von einem Anstieg der Sommertouren und dem neuerlichen Rückgang ab ca. Mitte Oktober (eine Säule steht für ca. eine Woche). Als Vergleich dienen @fig-anmeldungen_2021 und @fig-anmeldungen_2019, welche einen viel gleichmässigeren Saisonverlauf zeigen.

```{r anmeldungen_2020}
#| label: fig-anmeldungen_2020
#| fig-cap: "Verlauf der Anmeldungen im Jahr 2020 (alle Anlässe der Sektion)"


anm_total %>%
  filter(Startdatum >= as.POSIXct("2020-01-01") & Startdatum <= as.POSIXct("2020-12-31")) %>%
  ggplot(aes(x = Startdatum)) +
  geom_histogram(bins = 52, fill = "grey") +
  theme_minimal() +
  labs(
    x = "Datum des Anlasses",
    y = "Anzahl Anmeldungen"
  )
```

```{r anmeldungen_2021}
#| label: fig-anmeldungen_2021
#| fig-cap: "Verlauf der Anmeldungen im Jahr 2021 (alle Anlässe der Sektion)"


anm_total %>%
  filter(Startdatum >= as.POSIXct("2021-01-01") & Startdatum <= as.POSIXct("2021-12-31")) %>%
  ggplot(aes(x = Startdatum)) +
  geom_histogram(bins = 52, fill = "grey") +
  theme_minimal() +
  labs(
    x = "Datum des Anlasses",
    y = "Anzahl Anmeldungen"
  )
```

```{r anmeldungen_2019}
#| label: fig-anmeldungen_2019
#| fig-cap: "Verlauf der Anmeldungen im Jahr 2019 (alle Anlässe der Sektion)"


anm_total %>%
  filter(Startdatum >= as.POSIXct("2019-01-01") & Startdatum <= as.POSIXct("2019-12-31")) %>%
  ggplot(aes(x = Startdatum)) +
  geom_histogram(bins = 52, fill = "grey") +
  theme_minimal() +
  labs(
    x = "Datum des Anlasses",
    y = "Anzahl Anmeldungen"
  )
```

## Analyse der Ausschreibungen

### Anzahl Ausschreibungen pro Jahr

In @fig-ausschreibungen-pro-jahr sind die Anzahl Ausschreibungen nach Jahr ersichtlich. Es zeigt sich dabei, dass die Anzahl über die letzten Jahren stabil geblieben ist und ungefähr zwischen 400 und 420 Ausschreibungen schwankt. @fig-ausschreibungen-pro-jahr-senioren und @fig-ausschreibungen-pro-jahr-jugend zeigen die Anzahl Ausschreibungen pro Jahr für die Senioren-, resp. die Jugendgruppe (wobei die Ausschreibungen der JO noch nicht komplett scheinen).

```{r ausschreibungen_jahr}
#| label: fig-ausschreibungen-pro-jahr
#| fig-cap: "Anzahl Ausschreibungen pro Jahr"


auss_total %>%
  ggplot(aes(x = jahr)) +
  geom_bar(stat = "count", fill = "grey") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen"
  ) +
  theme_minimal() +
  scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450)) +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

```{r ausschreibungen_jahr_sektion}
#| label: fig-ausschreibungen-pro-jahr-sektion
#| fig-cap: "Anzahl Ausschreibungen pro Jahr (nur Sektion)"


auss_total %>%
  filter(Gruppe == "Sektion") |> 
  ggplot(aes(x = jahr)) +
  geom_bar(stat = "count", fill = "grey") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen"
  ) +
  theme_minimal() +
  # scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450)) +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

```{r ausschreibungen_jahr_senioren}
#| label: fig-ausschreibungen-pro-jahr-senioren
#| fig-cap: "Anzahl Ausschreibungen pro Jahr (nur Senioren)"

auss_total %>%
  filter(Gruppe == "Senioren") |> 
  ggplot(aes(x = jahr)) +
  geom_bar(stat = "count", fill = "grey") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen"
  ) +
  theme_minimal() +
  # scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450)) +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

```{r ausschreibungen_jahr_jugend}
#| label: fig-ausschreibungen-pro-jahr-jugend
#| fig-cap: "Anzahl Ausschreibungen pro Jahr (nur Jugend)"


auss_total %>%
  filter(Gruppe == "Jugend") |> 
  ggplot(aes(x = jahr)) +
  geom_bar(stat = "count", fill = "grey") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen"
  ) +
  theme_minimal() +
  # scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450)) +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

### Analyse der ausgeschriebenen Tourtypen

In Abbildung @fig-ausschreibungen-pro-jahr-tourtyp sind die Ausschreibungen nach Tourtyp und Jahr ersichtlich, wobei nur die folgenden Touren der Sektion (ohne JO) berücksichtigt wurden:

-   Skitouren
-   Schneeschuhtouren
-   Wanderungen
-   Hochtouren
-   Veranstaltungen

Untersucht man die Anzahl Ausschreibungen differenzierter nach Tourtyp, zeigen sich doch die einen oder anderen Schwankungen. So ist z. B. die Anzahl ausgeschriebener Wanderungen seit 2019 stetig zurückgagangen, von `r count(auss_total %>% filter(jahr == 2019) %>% filter(Tourtyp == "W"))` über `r count(auss_total %>% filter(jahr == 2020) %>% filter(Tourtyp == "W"))` auf `r count(auss_total %>% filter(jahr == 2021) %>% filter(Tourtyp == "W"))`. Noch klarer zeigt sich das in @fig-ausschreibungen-pro-jahr-tourtyp-nur-wandern, wo nur die Touren des Ressorts Wandern abgebildet sind.

```{r tourtypen_jahr}
#| label: fig-ausschreibungen-pro-jahr-tourtyp
#| fig-cap: "Anzahl Ausschreibungen nach Tourtyp und Jahr"


auss_total %>%
  filter(Tourtyp %in% c("H", "W", "S", "SS", "V", "K")) %>%
  # filter(Gruppe %in% "Sektion") |> 
  ggplot(aes(x = jahr, fill = factor(`Tourtyp lang`)),
    position = position_dodge(preserve = "single")
  ) +
  geom_bar(stat = "count") +
  scale_fill_brewer(palette = "Set1") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen",
    fill = "Tourtyp"
  ) +
  theme_minimal() +
  # scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450)) +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

In @fig-ausschreibungen-pro-jahr-tourtyp-nur-wandern-sektion ist die Anzahl Ausschreibungen der Wanderungen, Berg- und Schneeschuhtouren der Sektion ersichtlich. Es wird dabei klar, dass die Anzahl der ausgeschriebenen Wanderungen und Schneeschuhtouren von 2020 auf 2021 relativ stark zurückgegangen ist[^1]. @fig-ausschreibungen-pro-jahr-tourtyp-senioren zeigt umgekehrt die Ausschreibungen der Seniorengruppe.

[^1]: Zu bedenken ist, dass hier die Zusatztouren noch nicht ins Gewicht fallen, die evtl. im Laufe des Jahres noch dazukommen. Die Bilanz könnte sich also noch etwas verbessern

```{r tourtypen_jahr_w_sek}
#| label: fig-ausschreibungen-pro-jahr-tourtyp-nur-wandern-sektion
#| fig-cap: "Anzahl Ausschreibungen nach Tourtyp und Jahr, nur Wandern, Bergtouren \\& Schneeschuhe, nur Anlässe der Sektion (ohne Senioren)"


auss_total %>%
  filter(Tourtyp %in% c("BT", "W", "SS")) %>%
  filter(Gruppe %in% c("Sektion")) %>%
  ggplot(aes(x = jahr, fill = factor(`Tourtyp lang`)),
    position = position_dodge(preserve = "single")
  ) +
  geom_bar(stat = "count") +
  scale_fill_brewer(palette = "Set1") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen",
    fill = "Tourtyp"
  ) +
  theme_minimal() +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", colour = "white", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

```{r tourtypen_jahr_w_sen}
#| label: fig-ausschreibungen-pro-jahr-tourtyp-senioren
#| fig-cap: "Anzahl Ausschreibungen nach Tourtyp und Jahr, nur Wandern, Bergtouren \\& Schneeschuhe, nur Anlässe der Senioren (ohne Sektion)"


auss_total %>%
  filter(Tourtyp %in% c("BT", "W", "SS")) %>%
  filter(Gruppe %in% c("Senioren")) %>%
  ggplot(aes(x = jahr, fill = factor(`Tourtyp lang`)),
    position = position_dodge(preserve = "single")
  ) +
  geom_bar(stat = "count") +
  scale_fill_brewer(palette = "Set1") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen",
    fill = "Tourtyp"
  ) +
  theme_minimal() +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", colour = "white", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

### Ausschreibungen nach Gruppe

@fig-ausschreibungen-pro-jahr-nach-gruppe zeigt die Anzahl Ausschreibungen nach Gruppe.

```{r gruppe}
#| label: fig-ausschreibungen-pro-jahr-nach-gruppe
#| fig-cap: "Ausgeschriebene Touren Gruppe pro Jahr, nur Sektion, Jugend \\& Senioren"


auss_total %>%
  filter(Gruppe %in% c("Sektion", "Senioren", "Jugend")) %>%
  ggplot(aes(x = jahr, fill = factor(Gruppe)),
    position = position_dodge(preserve = "single")
  ) +
  geom_bar(stat = "count") +
  scale_fill_brewer(palette = "Set1") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen",
    fill = "Gruppe"
  ) +
  theme_minimal() +
  scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 250, 300, 350, 400, 450)) +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", colour = "white", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```

### Status der Touren

In @fig-ausschreibungen-tourenstatus ist der Tourenstatus der ausgeschriebenen Touren pro Jahr ersichtlich, wobei wiederum für das Corona-Jahr 2020 der hohe Anteil "abgesagt" ersichtlich ist.

```{r status}
#| label: fig-ausschreibungen-tourenstatus
#| fig-cap: "Status der ausgeschriebenen Touren nach Jahr, nur Anlässe der Sektion (ohne Senioren)"

# NA zu anderem label ändern
auss_total <- auss_total |>
  mutate(Status = ifelse(is.na(Status), "durchgeführt (keine Änderung)", Status))

auss_total %>%
  filter(Gruppe %in% c("Sektion")) %>%
  ggplot(aes(x = jahr, 
             fill = factor(Status))) +
  geom_bar(stat = "count") +
  scale_fill_brewer(palette = "Set1") +
  labs(
    x = "Jahr",
    y = "Anzahl Ausschreibungen",
    fill = "Status"
  ) +
  theme_minimal() +
  # scale_y_continuous(breaks=c(0, 10, 100, 150, 200, 250, 300, 350, 400, 450))  +
  scale_x_continuous(breaks = c(2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)) +
  stat_count(
    geom = "text", colour = "white", size = 3.5,
    aes(label = ..count..), position = position_stack(vjust = 0.5)
  )
```
